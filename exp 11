#include <stdio.h>
#include <pthread.h>
#include <unistd.h>

void* print_numbers(void* arg) {
    int id = (int)arg;  
    for (int i = 1; i <= 5; i++) {
        printf("Thread %d: %d\n", id, i);
        sleep(1);  
    }
    return NULL;
}

int main() {
    pthread_t threads[2];  
    int thread_ids[2] = {1, 2};

    for (int i = 0; i < 2; i++) {
        if (pthread_create(&threads[i], NULL, print_numbers, &thread_ids[i]) != 0) {
            perror("Thread creation failed");
            return 1;
        }
    }
    
    for (int i = 0; i < 2; i++) {
        pthread_join(threads[i], NULL);
    }

    printf("Both threads have finished executing.\n");

    return 0;
}


output:
Thread 1: 1
Thread 2: 1
Thread 1: 2
Thread 2: 2
Thread 1: 3
Thread 2: 3
Thread 1: 4
Thread 2: 4
Thread 1: 5
Thread 2: 5
Both threads have finished executing.
